sudo apt install samba gvfs-backends
sudo apt update
sudo apt upgrade


sudo mkdir /home/king/Público
sudo chmod 777 /home/king/Público
sudo mkdir /root/Público
sudo chmod 777 /root/Público


sudo systemctl restart smbd

sudo nano /etc/samba/smb.conf


[PublicoHome]
path = /home/king/Público
browsable = yes
writable = yes
guest ok = yes
read only = no

[PublicoRoot]
path = /root/Público
browsable = yes
writable = yes
guest ok = yes
read only = no


sudo smbpasswd -a agro

sudo systemctl start smbd
sudo systemctl start nmbd

sudo systemctl enable smbd
sudo systemctl enable nmbd

sudo systemctl restart smbd





-================================

Os comandos que você mencionou têm funções diferentes relacionadas a permissões e propriedade de arquivos e diretórios no sistema Linux. Vamos analisar cada um deles e compará-los com os comandos de `chmod 777`.

### Comandos Analisados

1. **`sudo chmod 770 /root/Público`**
   - Este comando altera as permissões do diretório `/root/Público` para `770`, o que significa que o proprietário e o grupo têm permissão total (leitura, escrita e execução), enquanto outros usuários não têm nenhuma permissão.

2. **`sudo chown -R agro:agro /root/Público`**
   - Este comando muda a propriedade do diretório `/root/Público` e de todos os seus arquivos e subdiretórios para o usuário `agro` e o grupo `agro`. O `-R` indica que a mudança deve ser feita recursivamente.

3. **`sudo chown -R agro:agro /home/agro/Público`**
   - Semelhante ao anterior, mas muda a propriedade do diretório `/home/agro/Público` para o usuário e grupo `agro`.

4. **`sudo chmod -R 770 /home/agro/Público`**
   - Este comando altera as permissões do diretório `/home/agro/Público` e de todos os seus arquivos e subdiretórios para `770`, permitindo que o proprietário e o grupo tenham acesso total, enquanto outros não têm acesso.

### Comparação com `chmod 777`

- **`sudo chmod 777 /home/agro/Público`**
  - Este comando altera as permissões do diretório `/home/agro/Público` para `777`, o que significa que todos (proprietário, grupo e outros) têm permissão total (leitura, escrita e execução). Isso é menos seguro do que `770`, pois permite que qualquer usuário do sistema possa modificar o conteúdo do diretório.

- **`sudo chmod 777 /root/Público`**
  - Similar ao anterior, mas para o diretório `/root/Público`. Isso também é uma prática de segurança ruim, pois o diretório `/root` é normalmente reservado para o usuário root e deve ter permissões restritas.

### Configuração do Samba

A configuração que você mencionou para criar e editar o arquivo manualmente refere-se a um compartilhamento Samba. Aqui está o que cada parte significa:

- **`[PublicoHome]` e `[PublicoRoot]`**: Esses são os nomes dos compartilhamentos que você está configurando no Samba.

- **`path = /home/agro/Público` e `path = /root/Público`**: Esses são os caminhos dos diretórios que estão sendo compartilhados.

- **`browsable = yes`**: Permite que o compartilhamento apareça na lista de compartilhamentos disponíveis.

- **`writable = yes`**: Permite que os usuários possam escrever (modificar) arquivos no diretório compartilhado.

- **`guest ok = yes`**: Permite que usuários não autenticados acessem o compartilhamento.

- **`read only = no`**: Indica que o compartilhamento não é somente leitura, permitindo que os usuários escrevam.

### Resumo

- Os comandos `chmod 770` e `chown` são usados para definir permissões e propriedade de arquivos, enquanto `chmod 777` dá acesso total a todos, o que pode ser um risco de segurança.
- A configuração do Samba define como os diretórios são compartilhados na rede, permitindo acesso e controle sobre quem pode ler e escrever nos diretórios especificados.
